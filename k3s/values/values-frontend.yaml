## @param ingress.enabled Enable or disable ingress for the frontend service.
ingress:
  enabled: true

  ## @param ingress.ingressClassName Name of the ingress class to use.
  ingressClassName: nginx

  ## @param ingress.hostname Hostname used in ingress rules.
  hostname: myapp.local

  ## @param ingress.pathType Path matching strategy for ingress.
  pathType: Prefix

  ## @param ingress.paths List of HTTP ingress paths and backends.
  paths:
    - path: /
      ## @param ingress.paths[].pathType Path matching type for this path.
      pathType: Prefix
      backend:
        service:
          ## @param ingress.paths[].backend.service.name Name of the backend service.
          name: frontend-nginx

          ## @param ingress.paths[].backend.service.namespace Namespace of the backend service.
          namespace: minio

          ## @param ingress.paths[].backend.service.port.port Backend service port number.
          port:
            number: 80

## @param service.type Kubernetes service type (e.g., ClusterIP, NodePort).
service:
  type: ClusterIP

  ## @param service.port Service port number.
  port: 80

## @param extraVolumes List of extra volumes to add to the pod.
extraVolumes:
  - name: html-content
    configMap:
      ## @param extraVolumes[].configMap.name Name of the ConfigMap to mount as a volume.
      name: frontend-html

## @param extraVolumeMounts List of extra volume mounts inside the container.
extraVolumeMounts:
  - name: html-content
    ## @param extraVolumeMounts[].mountPath Path inside the container to mount the volume.
    mountPath: /app
